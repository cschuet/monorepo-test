digraph mygraph {
  node [shape=box];
  "//app_1:test"
  "//app_1:test" -> "//app_1:test.py"
  "//app_1:test" -> "@python_deps//pypi__numpy:pypi__numpy"
  "//app_1:test.py"
  "//app_2:test"
  "//app_2:test" -> "//app_2:test.py"
  "//app_2:test" -> "@python_deps//pypi__numpy:pypi__numpy"
  "@python_deps//pypi__numpy:pypi__numpy"
  "@python_deps//pypi__numpy:pypi__numpy" -> "@python_deps//pypi__numpy:numpy/typing/tests/data/fail/ufuncs.py\n@python_deps//pypi__numpy:numpy/lib/arraypad.py\n@python_deps//pypi__numpy:numpy/compat/_inspect.py\n@python_deps//pypi__numpy:numpy/linalg/tests/test_regression.py\n@python_deps//pypi__numpy:numpy/f2py/src/fortranobject.c\n@python_deps//pypi__numpy:numpy/lib/histograms.py\n@python_deps//pypi__numpy:numpy/lib/shape_base.py\n@python_deps//pypi__numpy:numpy/fft/_pocketfft.py\n...and 616 more items"
  "//app_2:py_image"
  "//app_2:py_image" -> "//app_2:py_image.binary"
  "//app_2:py_image" -> "@py_debug_image_base//image:image"
  [label="@io_bazel_rules_docker//:debug"];
  "//app_2:py_image" -> "@io_bazel_rules_docker//:fastbuild\n@io_bazel_rules_docker//:optimized\n@io_bazel_rules_docker//:debug"
  "//app_2:py_image" -> "@py_image_base//image:image"
  [label="@io_bazel_rules_docker//:fastbuild\n//conditions:default\n@io_bazel_rules_docker//:optimized"];
  "//app_2:py_image.binary"
  "//app_2:py_image.binary" -> "//common_lib:lib"
  "//app_2:py_image.binary" -> "//app_2:app.py"
  "//app_2:py_image.binary" -> "@io_bazel_rules_docker//platforms:run_in_container"
  "//app_2:app.py"
  "//app_2:test.py"
  "//app_1:py_image"
  "//app_1:py_image" -> "//app_1:py_image.binary"
  "//app_1:py_image" -> "@py_debug_image_base//image:image"
  [label="@io_bazel_rules_docker//:debug"];
  "//app_1:py_image" -> "@io_bazel_rules_docker//:fastbuild\n@io_bazel_rules_docker//:optimized\n@io_bazel_rules_docker//:debug"
  "//app_1:py_image" -> "@py_image_base//image:image"
  [label="@io_bazel_rules_docker//:fastbuild\n//conditions:default\n@io_bazel_rules_docker//:optimized"];
  "@py_image_base//image:image"
  "@py_image_base//image:image" -> "@py_image_base//image:config.json\n@py_image_base//image:000.tar.gz\n@py_image_base//image:003.tar.gz\n@py_image_base//image:001.tar.gz\n@py_image_base//image:002.tar.gz"
  "@py_image_base//image:config.json\n@py_image_base//image:000.tar.gz\n@py_image_base//image:003.tar.gz\n@py_image_base//image:001.tar.gz\n@py_image_base//image:002.tar.gz"
  "@io_bazel_rules_docker//:fastbuild\n@io_bazel_rules_docker//:optimized\n@io_bazel_rules_docker//:debug"
  "@py_debug_image_base//image:image"
  "@py_debug_image_base//image:image" -> "@py_debug_image_base//image:config.json\n@py_debug_image_base//image:002.tar.gz\n@py_debug_image_base//image:003.tar.gz\n@py_debug_image_base//image:001.tar.gz\n@py_debug_image_base//image:000.tar.gz\n@py_debug_image_base//image:004.tar.gz"
  "@py_debug_image_base//image:config.json\n@py_debug_image_base//image:002.tar.gz\n@py_debug_image_base//image:003.tar.gz\n@py_debug_image_base//image:001.tar.gz\n@py_debug_image_base//image:000.tar.gz\n@py_debug_image_base//image:004.tar.gz"
  "//app_1:py_image.binary"
  "//app_1:py_image.binary" -> "//common_lib:lib"
  "//app_1:py_image.binary" -> "//app_1:app.py"
  "//app_1:py_image.binary" -> "@io_bazel_rules_docker//platforms:run_in_container"
  "@io_bazel_rules_docker//platforms:run_in_container"
  "@io_bazel_rules_docker//platforms:run_in_container" -> "@io_bazel_rules_docker//platforms:containerized"
  "@io_bazel_rules_docker//platforms:containerized"
  "//app_1:app.py"
  "//common_lib:lib"
  "//common_lib:lib" -> "//common_lib:lib.py"
  "//common_lib:lib.py"
  "@python_deps//pypi__numpy:numpy/typing/tests/data/fail/ufuncs.py\n@python_deps//pypi__numpy:numpy/lib/arraypad.py\n@python_deps//pypi__numpy:numpy/compat/_inspect.py\n@python_deps//pypi__numpy:numpy/linalg/tests/test_regression.py\n@python_deps//pypi__numpy:numpy/f2py/src/fortranobject.c\n@python_deps//pypi__numpy:numpy/lib/histograms.py\n@python_deps//pypi__numpy:numpy/lib/shape_base.py\n@python_deps//pypi__numpy:numpy/fft/_pocketfft.py\n...and 616 more items"
}
